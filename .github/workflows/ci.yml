name: Versionamento Automático HTML/CSS

on:
  push:
    branches:
      - main   # Troque para a branch que você quer monitorar

jobs:
  bump-tag:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Faz checkout do código
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2️⃣ Configura Git para commits feitos pelo Actions
      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3️⃣ Obter última tag
      - name: Obter última tag
        id: get_tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV

      # 4️⃣ Calcular nova tag sem repetir tags existentes
      - name: Calcular nova tag
        id: calc_tag
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LAST_TAG#v}"
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          # Garante que a tag seja única
          while git rev-parse "$NEW_TAG" >/dev/null 2>&1; do
            PATCH=$((PATCH + 1))
            NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          done
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Nova tag: $NEW_TAG"

      # 5️⃣ Criar tag e push seguro usando token do Actions
      - name: Criar tag no GitHub
        run: |
          git tag $NEW_TAG
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $NEW_TAG
